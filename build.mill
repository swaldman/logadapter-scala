//| mill-version: 1.0.3
//| mill-jvm-version: 17
//+-------------------------------------------------------------------------------------------------------------
package build

import mill.*, scalalib.*, publish.*

object Common:
  val scalaVersion   = "3.3.6"
  val organization   = "com.mchange"
  val publishVersion = "0.0.2-SNAPSHOT"
  val scalacOptions  = Seq.empty[String]
  //val scalacOptions  = Seq("-Xprint:postInlining","-Xmax-inlines:100000")


trait CommonModule extends ScalaModule with PublishModule:
  override def scalaVersion   = Common.scalaVersion
  override def publishVersion = Task( Common.publishVersion )
  override def scalacOptions  = Task( Common.scalacOptions )

  def makePomSettings( description : String ) =
    PomSettings(
      description = description,
      organization = Common.organization,
      url = "https://www.mchange.com/projects/logadapter-scala",
      licenses = Seq(License.`Apache-2.0`),
      versionControl = VersionControl.github("swaldman", "logadapter-scala"),
      developers = Seq(
        Developer("swaldman", "Steve Waldman", "https://github.com/swaldman")
      )
    )

object `package` extends CommonModule:
  override def artifactName   = Task( "logadapter-scala" )
  override def pomSettings    = Task( makePomSettings("Efficient (inline) Scala 3 facade for logging libraries") )

  override def mvnDeps = Task:
    Seq(
      mvn"com.lihaoyi::sourcecode:0.4.3-M5"
    )

  object mlog extends CommonModule:
    override def artifactName   = Task( "logadapter-scala-mlog" )
    override def pomSettings    = Task( makePomSettings("LogAdapter for mlog logging.") )

    def moduleDeps = Seq(build)
    override def mvnDeps = Task:
      Seq(
        mvn"com.mchange::mlog-scala:0.4.0"
      )

  object scribe extends CommonModule:
    override def artifactName   = Task( "logadapter-scala-scribe" )
    override def pomSettings    = Task( makePomSettings("LogAdapter for scribe logging.") )

    def moduleDeps = Seq(build)
    override def mvnDeps = Task:
      Seq(
        mvn"com.outr::scribe:3.16.1",
        mvn"com.mchange::conveniences:0.0.5"
      )

  object log4j2 extends CommonModule:
    override def artifactName   = Task( "logadapter-scala-log4j2" )
    override def pomSettings    = Task( makePomSettings("LogAdapter for log4j2 logging.") )

    def moduleDeps = Seq(build)
    override def mvnDeps = Task:
      Seq(
        mvn"org.apache.logging.log4j:log4j-core:2.24.3"
      )

  object slf4j extends CommonModule:
    override def artifactName   = Task( "logadapter-scala-slf4j" )
    override def pomSettings    = Task( makePomSettings("LogAdapter for slf4j logging.") )

    def moduleDeps = Seq(build)
    override def mvnDeps = Task:
      Seq(
        mvn"org.slf4j:slf4j-api:2.0.17"
      )

  object zio extends CommonModule:
    override def artifactName   = Task( "logadapter-scala-zio" )
    override def pomSettings    = Task( makePomSettings("LogAdapter for scribe logging.") )

    def moduleDeps = Seq(build)
    override def mvnDeps = Task:
      Seq(
        mvn"dev.zio::zio:2.1.18"
      )

  object test extends ScalaModule:
    override def scalaVersion   = Common.scalaVersion
    override def scalacOptions  = Task( Common.scalacOptions )

    def moduleDeps = Seq(build,mlog,scribe,log4j2,slf4j,zio)
    override def mvnDeps = Task:
      Seq(
        mvn"ch.qos.logback:logback-classic:1.5.15"
      )


