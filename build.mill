package build

import mill._
import mill.scalalib._
import mill.scalalib.publish._

object Common {
  val scalaVersion   = "3.3.6"
  val organization   = "com.mchange"
  val publishVersion = "0.0.1-SNAPSHOT"
  val scalacOptions  = Seq.empty[String]
  //val scalacOptions  = Seq("-Xprint:postInlining","-Xmax-inlines:100000")

  def pomSettings( description : String ) =
    PomSettings(
      description = description,
      organization = Common.organization,
      url = "https://www.mchange.com/projects/logadapter-scala",
      licenses = Seq(License.`Apache-2.0`),
      versionControl = VersionControl.github("swaldman", "logadapter-scala"),
      developers = Seq(
        Developer("swaldman", "Steve Waldman", "https://github.com/swaldman")
      )
    )
}

object `package` extends RootModule with ScalaModule with PublishModule {
  override def scalaVersion   = Common.scalaVersion
  override def artifactName   = T { "logadapter-scala" }
  override def publishVersion = T { Common.publishVersion }
  override def pomSettings    = T { Common.pomSettings("Efficient (inline) Scala 3 facade for logging libraries") }
  override def scalacOptions  = T { Common.scalacOptions }

  override def ivyDeps = T {
    Agg(
      ivy"com.lihaoyi::sourcecode:0.4.3-M5"
    )
  }

  object mlog extends ScalaModule with PublishModule {
    override def scalaVersion   = Common.scalaVersion
    override def artifactName   = T { "logadapter-scala-mlog" }
    override def publishVersion = T { Common.publishVersion }
    override def pomSettings    = T { Common.pomSettings("LogAdapter for mlog logging.") }
    override def scalacOptions  = T { Common.scalacOptions }

    def moduleDeps = Seq(build)
    override def ivyDeps = T {
      Agg(
        ivy"com.mchange::mlog-scala:0.4.0"
      )
    }
  }

  object scribe extends ScalaModule with PublishModule {
    override def scalaVersion   = Common.scalaVersion
    override def artifactName   = T { "logadapter-scala-scribe" }
    override def publishVersion = T { Common.publishVersion }
    override def pomSettings    = T { Common.pomSettings("LogAdapter for scribe logging.") }
    override def scalacOptions  = T { Common.scalacOptions }

    def moduleDeps = Seq(build)
    override def ivyDeps = T {
      Agg(
        ivy"com.outr::scribe:3.16.1",
        ivy"com.mchange::conveniences:0.0.5"
      )
    }
  }

  object log4j2 extends ScalaModule with PublishModule {
    override def scalaVersion   = Common.scalaVersion
    override def artifactName   = T { "logadapter-scala-log4j2" }
    override def publishVersion = T { Common.publishVersion }
    override def pomSettings    = T { Common.pomSettings("LogAdapter for log4j2 logging.") }
    override def scalacOptions  = T { Common.scalacOptions }

    def moduleDeps = Seq(build)
    override def ivyDeps = T {
      Agg(
      ivy"org.apache.logging.log4j:log4j-core:2.24.3"
      )
    }
  }

  object zio extends ScalaModule with PublishModule {
    override def scalaVersion   = Common.scalaVersion
    override def artifactName   = T { "logadapter-scala-zio" }
    override def publishVersion = T { Common.publishVersion }
    override def pomSettings    = T { Common.pomSettings("LogAdapter for scribe logging.") }
    override def scalacOptions  = T { Common.scalacOptions }

    def moduleDeps = Seq(build)
    override def ivyDeps = T {
      Agg(
        ivy"dev.zio::zio:2.1.18",
      )
    }
  }

  object test extends ScalaModule {
    def moduleDeps = Seq(build,mlog,scribe,log4j2,zio)
    override def scalaVersion   = Common.scalaVersion
    override def scalacOptions  = T { Common.scalacOptions }
  }
}
